spring:
  datasource:
    url: jdbc:h2:tcp://localhost/~/springsecurity
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
logging.level:
  org.hibernate.SQL: debug

jwt:
  secret:
    key: x!A%D*G-KaPdSgVkYp3s5v8y/B?E(H+M

server:
  port: 9091

#
#spring:
#  profiles:
#    active: local
#
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: update
#      #ddl-auto: none / create-drop / create / update / validate
#    properties:
#      hibernate:
#        format_sql: true
#    database-platform: org.hibernate.dialect.H2Dialect
#
#  jackson:
#    property-naming-strategy: SNAKE_CASE
#
#server:
#  servlet:
#    encoding:
#      force-response: true
#
#logging:
#  level:
#    root: info
#    sql: error
#    jdbc: off
#    jdbc.sqlonly: debug
#    org.springframework.web: DEBUG
#  #    org.hibernate.SQL: DEBUG
#  #    org.hibernate.type: trace
#  file:
#    path: /logs
#
#
#---
## 로컬
#spring:
#  config:
#    activate:
#      on-profile: local
#
#  h2:
#    console:
#      enabled: true
#      path: /h2-console
#
#  datasource:
#    #    url: jdbc:h2:~/test; #메모리
#    url: jdbc:h2:file:./memoryDb #상대경로 파일저장(memoryDb.mv.db)
#    driver-class-name: org.h2.Driver
#    username: sa
#    password:
#
#server:
#  port: 8080
#
#jwt:
#  key: 12345678901234567890123456789012
#
#---
## 개발
#spring:
#  config:
#    activate:
#      on-profile: dev
#
#server:
#  port: 9090
#
#---
## 배포
#spring:
#  config:
#    activate:
#      on-profile: release
#
#server:
#  port: 9000